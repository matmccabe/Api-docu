openapi: 3.0.0
info:
  title: OpenWeatherMap API
  version: '2.5'
  description: >-
    Get the current weather, daily forecast for 16 days, and a
    three-hour-interval forecast for 5 days for your city. Helpful stats,
    graphics, and this day in history charts are available for your reference.
    Interactive maps show precipitation, clouds, pressure, wind around your
    location stations. Data is available in JSON, XML, or HTML format. **Note**:
    This sample Swagger file covers the `current` endpoint only from the
    OpenWeatherMap API. <br/><br/>**Note**: All parameters are optional, but you
    must select at least one parameter. Calling the API by city ID (using the
    `id` parameter) will provide the most precise location results.
  contact:
    name: Support
    url: 'https://openweathermap.org/api'
    email: some_email@gmail.com
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
    url: 'https://creativecommons.org/licenses/by-sa/4.0/'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: weather
      tags:
        - Weather endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  coord:
                    type: object
                    required:
                      - lon
                      - lat
                    properties:
                      lon:
                        type: number
                        description: 'City geo location, longitude'
                        example: 145.77
                      lat:
                        type: number
                        description: 'City geo location, latitude'
                        example: -16.92
                  weather:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          description: Weather condition id
                        main:
                          type: string
                          minLength: 1
                          description: >-
                            Group of weather parameters (Rain, Snow, Extreme
                            etc.)
                        description:
                          type: string
                          minLength: 1
                          description: Weather condition within the group
                        icon:
                          type: string
                          minLength: 1
                          description: Weather icon id
                      required:
                        - id
                        - main
                        - description
                        - icon
                  base:
                    type: string
                    minLength: 1
                    description: Internal parameter
                  main:
                    type: object
                    required:
                      - temp
                      - feels_like
                      - temp_min
                      - temp_max
                      - pressure
                      - humidity
                    properties:
                      temp:
                        type: number
                        description: >-
                          Temperature. Unit Default: Kelvin, Metric: Celsius,
                          Imperial: Fahrenheit.
                      feels_like:
                        type: number
                        description: What the weather feels like despite the actual numbers
                      temp_min:
                        type: number
                        description: >-
                          Minimum temperature at the moment. This is deviation
                          from current temp that is possible for large cities
                          and megalopolises geographically expanded (use these
                          parameter optionally). Unit Default: Kelvin, Metric:
                          Celsius, Imperial: Fahrenheit.
                      temp_max:
                        type: number
                        description: >-
                          Maximum temperature at the moment. This is deviation
                          from current temp that is possible for large cities
                          and megalopolises geographically expanded (use these
                          parameter optionally). Unit Default: Kelvin, Metric:
                          Celsius, Imperial: Fahrenheit.
                      pressure:
                        type: number
                        description: >-
                          Atmospheric pressure (on the sea level, if there is no
                          sea_level or grnd_level data), hPa
                      humidity:
                        type: number
                        description: 'Humidity, %'
                  visibility:
                    type: number
                  wind:
                    type: object
                    required:
                      - speed
                      - deg
                    description: ''
                    properties:
                      speed:
                        type: number
                        description: >-
                          Wind speed. Unit Default: meter/sec, Metric:
                          meter/sec, Imperial: miles/hour.
                      deg:
                        type: number
                        description: 'Wind direction, degrees (meteorological)'
                  clouds:
                    type: object
                    required:
                      - all
                    properties:
                      all:
                        type: number
                        description: 'Cloudiness, %'
                  dt:
                    type: number
                    description: 'Time of data calculation, unix, UTC'
                  sys:
                    type: object
                    required:
                      - type
                      - id
                      - country
                      - sunrise
                      - sunset
                    properties:
                      type:
                        type: number
                        description: Internal parameter
                      id:
                        type: number
                        description: Internal parameter
                      country:
                        type: string
                        minLength: 1
                        description: 'Country code (GB, JP etc.)'
                      sunrise:
                        type: number
                        description: 'Sunrise time, unix, UTC'
                      sunset:
                        type: number
                        description: 'Sunset time, unix, UTC'
                  timezone:
                    type: number
                    description: the timezone for the station
                  id:
                    type: number
                    description: City ID
                  name:
                    type: string
                    minLength: 1
                    description: Name
                  cod:
                    type: number
                    description: Internal parameter
                required:
                  - coord
                  - weather
                  - base
                  - main
                  - visibility
                  - wind
                  - clouds
                  - dt
                  - sys
                  - timezone
                  - id
                  - name
                  - cod
              examples:
                Example:
                  value:
                    coord:
                      lon: 0
                      lat: 0
                    weather:
                      - id: 0
                        main: string
                        description: string
                        icon: string
                    base: string
                    main:
                      temp: 0
                      feels_like: 0
                      temp_min: 0
                      temp_max: 0
                      pressure: 0
                      humidity: 0
                    visibility: 0
                    wind:
                      speed: 0
                      deg: 0
                    clouds:
                      all: 0
                    dt: 0
                    sys:
                      type: 0
                      id: 0
                      country: string
                      sunrise: 0
                      sunset: 0
                    timezone: 0
                    id: 0
                    name: string
                    cod: 0
      operationId: get-weather
      description: >-
        Access current weather data for any location on Earth including over
        200,000 cities! Current weather is frequently updated based on global
        models and data from more than 40,000 weather stations.
      parameters:
        - schema:
            type: string
            enum:
              - standard
              - metric
              - imperial
          in: query
          name: zip
          description: >-
            **Zip code**. Search by zip code. *Example: 95050,us*. Please note
            that if the country is not specified, the search uses USA as a
            default.
        - schema:
            type: string
          in: query
          name: units
          description: >-
            **Units**. *Example: imperial*. Possible values: `standard`,
            `metric`, and `imperial`. When you do not use the `units` parameter,
            the format is `standard` by default.
        - schema:
            type: string
          in: query
          name: q
          description: >-
            **City name**. *Example: London*. You can call by city name, or by
            city name and country code. The API responds with a list of results
            that match a searching word. For the query value, type the city name
            and optionally the country code divided by a comma; use ISO 3166
            country codes.
        - schema:
            type: string
          in: query
          name: id
          description: >-
            **City ID**. *Example: `2172797`*. You can call by city ID. The API
            responds with the exact result. The List of city IDs can be
            downloaded [here](http://bulk.openweathermap.org/sample/). You can
            include multiple cities in this parameter — just separate them by
            commas. The limit of locations is 20. *Note: A single ID counts as a
            one API call. So, if you have city IDs, it’s treated as 3 API
            calls.*
        - schema:
            type: string
          in: query
          name: lat
          description: >-
            **Latitude**. *Example: 35*. The latitude coordinate of the location
            of your interest. Must use with `lon`.
        - $ref: '#/components/parameters/lon'
        - schema:
            type: string
            default: en
            enum:
              - ar
              - bg
              - ca
              - cz
              - de
              - el
              - en
              - fa
              - fi
              - fr
              - gl
              - hr
              - hu
              - it
              - ja
              - kr
              - la
              - lt
              - mk
              - nl
              - pl
              - pt
              - ro
              - ru
              - se
              - sk
              - sl
              - es
              - tr
              - ua
              - vi
              - zh_cn
              - zh_tw
          in: query
          name: lang
          description: >-
            **Language**. *Example: en*. You can use lang parameter to get the
            output in your language. We support the following languages that you
            can use with the corresponded lang values: Arabic - `ar`, Bulgarian
            - `bg`, Catalan - `ca`, Czech - `cz`, German - `de`, Greek - `el`,
            English - `en`, Persian (Farsi) - `fa`, Finnish - `fi`, French -
            `fr`, Galician - `gl`, Croatian - `hr`, Hungarian - `hu`, Italian -
            `it`, Japanese - `ja`, Korean - `kr`, Latvian - `la`, Lithuanian -
            `lt`, Macedonian - `mk`, Dutch - `nl`, Polish - `pl`, Portuguese -
            `pt`, Romanian - `ro`, Russian - `ru`, Swedish - `se`, Slovak -
            `sk`, Slovenian - `sl`, Spanish - `es`, Turkish - `tr`, Ukrainian -
            `ua`, Vietnamese - `vi`, Chinese Simplified - `zh_cn`, Chinese
            Traditional - `zh_tw`.
        - schema:
            type: string
            enum:
              - json
              - xml
              - html
            default: json
          in: query
          name: mode
          description: >-
            **Mode*. *Example: html. Determines the format of the response.
            Possible values are `json`, `xml`, and `html`. If the mode parameter
            is empty, the format is `json` by default.
    parameters: []
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: appid
      type: apiKey
      in: query
      description: API key to authorize requests
  parameters:
    lon:
      name: lon
      in: query
      required: false
      schema:
        type: string
      description: >-
        **Longitude**. *Example: 139*. Longitude coordinate of the location of
        your interest. Must use with `lat`.
security:
  - app_id: []